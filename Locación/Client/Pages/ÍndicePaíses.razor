@page "/países"
@inject IHttpService http

<h3 style="margin-bottom: 32px;">Lista de "Países"</h3>

<table class="table table-hover">
    <thead>
        <tr>
            <th class="list-group-item-secondary">Código</th>
            <th class="list-group-item-secondary">Nombre</th>
            <th class="list-group-item-secondary">Editar</th>
            <th class="list-group-item-secondary">Eliminar</th>
        </tr>
    </thead>

    @if (países == null)
    {
        <tr>Cargando...</tr>
    }

    else if (países.Count == 0)
    {
        <tr>No existen países.</tr>
    }

    else
    {
        <tbody>
            @foreach (var item in países)
            {
                <tr>
                    <td style="font-weight: bold">@item.PaísCódigo</td>
                    <td>@item.PaísNombre</td>
                    <td><a class="btn btn-outline-info" href="países/editar/@item.ID">Editar</a></td>
                    <td><button class="btn btn-outline-danger" @onclick="()=>PaísEliminar(item)">Eliminar</button></td>
                </tr>
            }

        </tbody>
    }
</table>

<a class="btn btn-outline-success" href="países/crear">Nuevo</a>

<Confirmación @ref="confirmación" onConfirm="PaísGrabarEliminar" onCancel="PaísCancelar" Título="Eliminar">
    <div>¿Desea eliminar el país @eliminarPaís.PaísNombre?</div>
</Confirmación>

@code {
    List<Locación.Shared.Data.Entidades.País> países;
    Confirmación confirmación;
    Locación.Shared.Data.Entidades.País eliminarPaís;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Leer();
    }

    private async Task Leer()
    {
        var respuestaHttp = await http.Get<List<Locación.Shared.Data.Entidades.País>>("api/países");
        if (!respuestaHttp.Error)
        {
            países = respuestaHttp.Respuesta;
        }
    }

    private void PaísEliminar(Locación.Shared.Data.Entidades.País país)
    {
        confirmación.Mostrar();
        eliminarPaís = país;
    }

    private async Task PaísGrabarEliminar()
    {
        var respuesta = await http.Delete($"api/países/{eliminarPaís.ID}");

        if (respuesta.Error)
        {
            var body = await respuesta.GetBody();
        }

        PaísCancelar();
        await Leer();
    }

    private void PaísCancelar()
    {
        confirmación.Ocultar();
        eliminarPaís = null;
    }
}
